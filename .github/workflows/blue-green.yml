name: CI/CD Blue-Green Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up AWS CLI for EKS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Update kubeconfig to connect to EKS cluster
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name my-cluster

      # Deploy Green environment (New version)
      - name: Deploy Green environment
        run: |
          kubectl apply -f k8s/deployment-green.yml
          kubectl apply -f k8s/service-green.yml

      # Wait for Green environment to become ready
      - name: Wait for Green deployment to be ready
        run: |
          kubectl rollout status deployment/my-app-green --timeout=120s

      # Perform smoke test on the Green environment
      - name: Smoke test Green environment
        run: |
          # Get the external IP for the Green environment's LoadBalancer service
          GREEN_IP=$(kubectl get svc green-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "Green environment IP: $GREEN_IP"
          # Perform the smoke test by curling the service
          curl --fail http://$GREEN_IP || exit 1

      # If smoke test passes, update Blue Service to point to Green environment
      - name: Switch traffic from Blue to Green
        run: |
          kubectl patch service blue-service -p '{"spec": {"selector": {"app": "my-app-green"}}}'

      # Optionally, clean up the old Blue environment (deployments, etc.)
      - name: Clean up Blue environment
        if: success()
        run: |
          kubectl delete deployment my-app-blue
          kubectl delete svc green-service
